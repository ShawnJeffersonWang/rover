services:
  # ---------------------------
  # PostgreSQL 服务 (替换 MySQL)
  # ---------------------------
  postgres:
    image: "postgres:17"
    container_name: agricultural_vision_db
    environment:
      POSTGRES_USER: "root"          # 替换为你的应用配置中的用户名
      POSTGRES_PASSWORD: "325523"  # 替换为你的应用配置中的密码
      POSTGRES_DB: "agricultural_vision"
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d agricultural_vision" ] # 使用 pg_isready 进行健康检查
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  # ---------------------------
  # Redis 服务 (缓存)
  # ---------------------------
  redis:
    image: "redis:8.0"
    container_name: agricultural_vision_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network
    environment:
      - TZ=Asia/Shanghai

  # ---------------------------
  # Rust 应用实例
  # ---------------------------
  agricultural_vision_rust_app:
    build: .
    container_name: agricultural_vision_rust_app
    # 修正: 依赖 postgres, redis, kafka，并等待它们启动
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000" # 将端口映射到宿主机，方便调试
    networks:
      - app-network
    environment:
      # 确保这些环境变量与你的 Rust 应用配置 (config.yaml) 匹配
      - RUST_LOG=info
      - TZ=Asia/Shanghai

volumes:
  postgres-data: {} # 定义 postgres 的持久化卷

# ---------------------------
# 网络配置
# ---------------------------
networks:
  app-network:
    driver: bridge